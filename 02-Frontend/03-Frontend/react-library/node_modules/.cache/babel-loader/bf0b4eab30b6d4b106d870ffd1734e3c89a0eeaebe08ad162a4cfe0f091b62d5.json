{"ast":null,"code":"var _jsxFileName = \"/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/src/layouts/Dashboard/components/BarChart/BarChart.tsx\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BarChart = props => {\n  const data = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mr-3 h-50 w-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-color\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title \",\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body h-75\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 700,\n            height: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n            data: data,\n            theme: {\n              axis: {\n                domain: {\n                  line: {\n                    stroke: colors.grey[100]\n                  }\n                },\n                legend: {\n                  text: {\n                    fill: colors.grey[100]\n                  }\n                },\n                ticks: {\n                  line: {\n                    stroke: colors.grey[100],\n                    strokeWidth: 1\n                  },\n                  text: {\n                    fill: colors.grey[100]\n                  }\n                }\n              },\n              legends: {\n                text: {\n                  fill: colors.grey[100]\n                }\n              }\n            },\n            keys: [\"hotDog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"],\n            indexBy: \"country\",\n            margin: {\n              top: 50,\n              right: 130,\n              bottom: 50,\n              left: 60\n            },\n            padding: 0.3,\n            valueScale: {\n              type: \"linear\"\n            },\n            indexScale: {\n              type: \"band\",\n              round: true\n            },\n            colors: {\n              scheme: \"nivo\"\n            },\n            defs: [{\n              id: \"dots\",\n              type: \"patternDots\",\n              background: \"inherit\",\n              color: \"#38bcb2\",\n              size: 4,\n              padding: 1,\n              stagger: true\n            }, {\n              id: \"lines\",\n              type: \"patternLines\",\n              background: \"inherit\",\n              color: \"#eed312\",\n              rotation: -45,\n              lineWidth: 6,\n              spacing: 10\n            }],\n            fill: [{\n              match: {\n                id: \"fries\"\n              },\n              id: \"dots\"\n            }, {\n              match: {\n                id: \"sandwich\"\n              },\n              id: \"lines\"\n            }],\n            borderColor: {\n              from: \"color\",\n              modifiers: [[\"darker\", 1.6]]\n            },\n            axisTop: null,\n            axisRight: null,\n            axisBottom: {\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"country\",\n              legendPosition: \"middle\",\n              legendOffset: 32,\n              truncateTickAt: 0\n            },\n            axisLeft: {\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"food\",\n              legendPosition: \"middle\",\n              legendOffset: -40,\n              truncateTickAt: 0\n            },\n            enableLabel: false,\n            labelSkipWidth: 12,\n            labelSkipHeight: 12,\n            labelTextColor: {\n              from: \"color\",\n              modifiers: [[\"darker\", 1.6]]\n            },\n            legends: [{\n              dataFrom: \"keys\",\n              anchor: \"bottom-right\",\n              direction: \"column\",\n              justify: false,\n              translateX: 120,\n              translateY: 0,\n              itemsSpacing: 2,\n              itemWidth: 100,\n              itemHeight: 20,\n              itemDirection: \"left-to-right\",\n              itemOpacity: 0.85,\n              symbolSize: 20,\n              effects: [{\n                on: \"hover\",\n                style: {\n                  itemOpacity: 1\n                }\n              }]\n            }],\n            role: \"application\",\n            ariaLabel: \"Nivo bar chart demo\",\n            barAriaLabel: e => e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["ResponsiveBar","jsxDEV","_jsxDEV","BarChart","props","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","theme","axis","domain","line","stroke","colors","grey","legend","text","fill","ticks","strokeWidth","legends","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","truncateTickAt","axisLeft","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","role","ariaLabel","barAriaLabel","e","formattedValue","indexValue","_c","$RefreshReg$"],"sources":["/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/src/layouts/Dashboard/components/BarChart/BarChart.tsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\nimport { BarDatum, ResponsiveBar } from \"@nivo/bar\";\nimport { tokens } from \"../theme\";\n\nexport const BarChart: React.FC<{ data: BarDatum[] }> = (props) => {\n  const data: readonly BarDatum[] = props.data;\n\n\n\n  return (\n    <div className=\"mr-3 h-50 w-50\">\n      <div className=\"card bg-color\">\n        <div className=\"card-header\">\n          <h3 className=\"card-title \">Bar Chart</h3>\n        </div>\n        <div className=\"card-body h-75\">\n          <div style={{ width: 700, height: 400}}>\n            <ResponsiveBar\n              data={data}\n              theme={{\n                axis: {\n                  domain: {\n                    line: {\n                      stroke: colors.grey[100],\n                    },\n                  },\n                  legend: {\n                    text: {\n                      fill: colors.grey[100],\n                    },\n                  },\n                  ticks: {\n                    line: {\n                      stroke: colors.grey[100],\n                      strokeWidth: 1,\n                    },\n                    text: {\n                      fill: colors.grey[100],\n                    },\n                  },\n                },\n                legends: {\n                  text: {\n                    fill: colors.grey[100],\n                  },\n                },\n              }}\n              keys={[\"hotDog\", \"burger\", \"sandwich\", \"kebab\", \"fries\", \"donut\"]}\n              indexBy=\"country\"\n              margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n              padding={0.3}\n              valueScale={{ type: \"linear\" }}\n              \n              indexScale={{ type: \"band\", round: true }}\n              colors={{ scheme: \"nivo\" }}\n              defs={[\n                {\n                  id: \"dots\",\n                  type: \"patternDots\",\n                  background: \"inherit\",\n                  color: \"#38bcb2\",\n                  size: 4,\n                  padding: 1,\n                  stagger: true,\n                },\n                {\n                  id: \"lines\",\n                  type: \"patternLines\",\n                  background: \"inherit\",\n                  color: \"#eed312\",\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              fill={[\n                {\n                  match: {\n                    id: \"fries\",\n                  },\n                  id: \"dots\",\n                },\n                {\n                  match: {\n                    id: \"sandwich\",\n                  },\n                  id: \"lines\",\n                },\n              ]}\n              borderColor={{\n                from: \"color\",\n                modifiers: [[\"darker\", 1.6]],\n              }}\n              axisTop={null}\n              axisRight={null}\n              axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: \"country\",\n                legendPosition: \"middle\",\n                legendOffset: 32,\n                truncateTickAt: 0,\n              }}\n              axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: \"food\",\n                legendPosition: \"middle\",\n                legendOffset: -40,\n                truncateTickAt: 0,\n              }}\n              enableLabel={false}\n              labelSkipWidth={12}\n              labelSkipHeight={12}\n              labelTextColor={{\n                from: \"color\",\n                modifiers: [[\"darker\", 1.6]],\n              }}\n              legends={[\n                {\n                  dataFrom: \"keys\",\n                  anchor: \"bottom-right\",\n                  direction: \"column\",\n                  justify: false,\n                  translateX: 120,\n                  translateY: 0,\n                  itemsSpacing: 2,\n                  itemWidth: 100,\n                  itemHeight: 20,\n                  itemDirection: \"left-to-right\",\n                  itemOpacity: 0.85,\n                  symbolSize: 20,\n                  effects: [\n                    {\n                      on: \"hover\",\n                      style: {\n                        itemOpacity: 1,\n                      },\n                    },\n                  ],\n                },\n              ]}\n              role=\"application\"\n              ariaLabel=\"Nivo bar chart demo\"\n              barAriaLabel={(e) =>\n                e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue\n              }\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";AACA,SAAmBA,aAAa,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,OAAO,MAAMC,QAAwC,GAAIC,KAAK,IAAK;EACjE,MAAMC,IAAyB,GAAGD,KAAK,CAACC,IAAI;EAI5C,oBACEH,OAAA;IAAKI,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BL,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BL,OAAA;QAAKI,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BL,OAAA;UAAII,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACNT,OAAA;QAAKI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BL,OAAA;UAAKU,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAG,CAAE;UAAAP,QAAA,eACrCL,OAAA,CAACF,aAAa;YACZK,IAAI,EAAEA,IAAK;YACXU,KAAK,EAAE;cACLC,IAAI,EAAE;gBACJC,MAAM,EAAE;kBACNC,IAAI,EAAE;oBACJC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAAC,GAAG;kBACzB;gBACF,CAAC;gBACDC,MAAM,EAAE;kBACNC,IAAI,EAAE;oBACJC,IAAI,EAAEJ,MAAM,CAACC,IAAI,CAAC,GAAG;kBACvB;gBACF,CAAC;gBACDI,KAAK,EAAE;kBACLP,IAAI,EAAE;oBACJC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;oBACxBK,WAAW,EAAE;kBACf,CAAC;kBACDH,IAAI,EAAE;oBACJC,IAAI,EAAEJ,MAAM,CAACC,IAAI,CAAC,GAAG;kBACvB;gBACF;cACF,CAAC;cACDM,OAAO,EAAE;gBACPJ,IAAI,EAAE;kBACJC,IAAI,EAAEJ,MAAM,CAACC,IAAI,CAAC,GAAG;gBACvB;cACF;YACF,CAAE;YACFO,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAE;YAClEC,OAAO,EAAC,SAAS;YACjBC,MAAM,EAAE;cAAEC,GAAG,EAAE,EAAE;cAAEC,KAAK,EAAE,GAAG;cAAEC,MAAM,EAAE,EAAE;cAAEC,IAAI,EAAE;YAAG,CAAE;YACtDC,OAAO,EAAE,GAAI;YACbC,UAAU,EAAE;cAAEC,IAAI,EAAE;YAAS,CAAE;YAE/BC,UAAU,EAAE;cAAED,IAAI,EAAE,MAAM;cAAEE,KAAK,EAAE;YAAK,CAAE;YAC1CnB,MAAM,EAAE;cAAEoB,MAAM,EAAE;YAAO,CAAE;YAC3BC,IAAI,EAAE,CACJ;cACEC,EAAE,EAAE,MAAM;cACVL,IAAI,EAAE,aAAa;cACnBM,UAAU,EAAE,SAAS;cACrBC,KAAK,EAAE,SAAS;cAChBC,IAAI,EAAE,CAAC;cACPV,OAAO,EAAE,CAAC;cACVW,OAAO,EAAE;YACX,CAAC,EACD;cACEJ,EAAE,EAAE,OAAO;cACXL,IAAI,EAAE,cAAc;cACpBM,UAAU,EAAE,SAAS;cACrBC,KAAK,EAAE,SAAS;cAChBG,QAAQ,EAAE,CAAC,EAAE;cACbC,SAAS,EAAE,CAAC;cACZC,OAAO,EAAE;YACX,CAAC,CACD;YACFzB,IAAI,EAAE,CACJ;cACE0B,KAAK,EAAE;gBACLR,EAAE,EAAE;cACN,CAAC;cACDA,EAAE,EAAE;YACN,CAAC,EACD;cACEQ,KAAK,EAAE;gBACLR,EAAE,EAAE;cACN,CAAC;cACDA,EAAE,EAAE;YACN,CAAC,CACD;YACFS,WAAW,EAAE;cACXC,IAAI,EAAE,OAAO;cACbC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC;YAC7B,CAAE;YACFC,OAAO,EAAE,IAAK;YACdC,SAAS,EAAE,IAAK;YAChBC,UAAU,EAAE;cACVC,QAAQ,EAAE,CAAC;cACXC,WAAW,EAAE,CAAC;cACdC,YAAY,EAAE,CAAC;cACfrC,MAAM,EAAE,SAAS;cACjBsC,cAAc,EAAE,QAAQ;cACxBC,YAAY,EAAE,EAAE;cAChBC,cAAc,EAAE;YAClB,CAAE;YACFC,QAAQ,EAAE;cACRN,QAAQ,EAAE,CAAC;cACXC,WAAW,EAAE,CAAC;cACdC,YAAY,EAAE,CAAC;cACfrC,MAAM,EAAE,MAAM;cACdsC,cAAc,EAAE,QAAQ;cACxBC,YAAY,EAAE,CAAC,EAAE;cACjBC,cAAc,EAAE;YAClB,CAAE;YACFE,WAAW,EAAE,KAAM;YACnBC,cAAc,EAAE,EAAG;YACnBC,eAAe,EAAE,EAAG;YACpBC,cAAc,EAAE;cACdf,IAAI,EAAE,OAAO;cACbC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC;YAC7B,CAAE;YACF1B,OAAO,EAAE,CACP;cACEyC,QAAQ,EAAE,MAAM;cAChBC,MAAM,EAAE,cAAc;cACtBC,SAAS,EAAE,QAAQ;cACnBC,OAAO,EAAE,KAAK;cACdC,UAAU,EAAE,GAAG;cACfC,UAAU,EAAE,CAAC;cACbC,YAAY,EAAE,CAAC;cACfC,SAAS,EAAE,GAAG;cACdC,UAAU,EAAE,EAAE;cACdC,aAAa,EAAE,eAAe;cAC9BC,WAAW,EAAE,IAAI;cACjBC,UAAU,EAAE,EAAE;cACdC,OAAO,EAAE,CACP;gBACEC,EAAE,EAAE,OAAO;gBACXrE,KAAK,EAAE;kBACLkE,WAAW,EAAE;gBACf;cACF,CAAC;YAEL,CAAC,CACD;YACFI,IAAI,EAAC,aAAa;YAClBC,SAAS,EAAC,qBAAqB;YAC/BC,YAAY,EAAGC,CAAC,IACdA,CAAC,CAAC3C,EAAE,GAAG,IAAI,GAAG2C,CAAC,CAACC,cAAc,GAAG,eAAe,GAAGD,CAAC,CAACE;UACtD;YAAA/E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC6E,EAAA,GAvJWrF,QAAwC;AAAA,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}