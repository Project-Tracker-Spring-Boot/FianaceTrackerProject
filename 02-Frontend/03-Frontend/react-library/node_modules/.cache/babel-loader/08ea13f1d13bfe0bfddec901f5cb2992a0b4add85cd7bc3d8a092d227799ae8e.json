{"ast":null,"code":"import { memo as e, useMemo as r, useState as n, createElement as t, Fragment as o, useRef as i, useEffect as a, useCallback as c } from \"react\";\nimport { getLabelGenerator as l, useValueFormatter as d, useMotionConfig as s, useTheme as u, midAngle as b, getPolarLabelProps as v, Container as f, useDimensions as g, SvgWrapper as p, degreesToRadians as h, getRelativeCursor as y, ResponsiveWrapper as m } from \"@nivo/core\";\nimport { BoxLegendSvg as A, renderLegendToCanvas as R } from \"@nivo/legends\";\nimport { BasicTooltip as O, TableTooltip as C, Chip as M, useTooltip as x } from \"@nivo/tooltip\";\nimport { jsx as k, Fragment as E } from \"react/jsx-runtime\";\nimport { useOrdinalColorScale as W, useInheritedColor as B } from \"@nivo/colors\";\nimport { to as I, animated as G, useTransition as w } from \"@react-spring/web\";\nimport { arc as L } from \"d3-shape\";\nimport { chord as T, ribbon as S } from \"d3-chord\";\nimport { findArcUnderCursor as F } from \"@nivo/arcs\";\nfunction V() {\n  return V = Object.assign ? Object.assign.bind() : function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var n = arguments[r];\n      for (var t in n) Object.prototype.hasOwnProperty.call(n, t) && (e[t] = n[t]);\n    }\n    return e;\n  }, V.apply(this, arguments);\n}\nfunction P(e, r) {\n  if (null == e) return {};\n  var n,\n    t,\n    o = {},\n    i = Object.keys(e);\n  for (t = 0; t < i.length; t++) n = i[t], r.indexOf(n) >= 0 || (o[n] = e[n]);\n  return o;\n}\nvar j = e(function (e) {\n    var r = e.arc;\n    return k(O, {\n      id: r.label,\n      value: r.formattedValue,\n      color: r.color,\n      enableChip: !0\n    });\n  }),\n  H = e(function (e) {\n    var r = e.ribbon;\n    return k(C, {\n      rows: [[k(M, {\n        color: r.source.color\n      }, \"chip\"), k(\"strong\", {\n        children: r.source.label\n      }, \"id\"), r.source.formattedValue], [k(M, {\n        color: r.target.color\n      }, \"chip\"), k(\"strong\", {\n        children: r.target.label\n      }, \"id\"), r.target.formattedValue]]\n    });\n  }),\n  D = {\n    layers: [\"ribbons\", \"arcs\", \"labels\", \"legends\"],\n    padAngle: 0,\n    innerRadiusRatio: .9,\n    innerRadiusOffset: 0,\n    colors: {\n      scheme: \"nivo\"\n    },\n    arcOpacity: 1,\n    activeArcOpacity: 1,\n    inactiveArcOpacity: .15,\n    arcBorderWidth: 1,\n    arcBorderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", .4]]\n    },\n    arcTooltip: j,\n    ribbonOpacity: .5,\n    activeRibbonOpacity: .85,\n    inactiveRibbonOpacity: .15,\n    ribbonBorderWidth: 1,\n    ribbonBorderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", .4]]\n    },\n    ribbonBlendMode: \"normal\",\n    enableLabel: !0,\n    label: \"id\",\n    labelOffset: 12,\n    labelRotation: 0,\n    labelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    isInteractive: !0,\n    legends: [],\n    animate: !0,\n    motionConfig: \"gentle\",\n    role: \"img\"\n  },\n  z = V({}, D, {\n    ribbonBlendMode: \"normal\",\n    ribbonTooltip: H\n  }),\n  q = V({}, D, {\n    pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n  }),\n  J = function (e) {\n    var r = e.padAngle;\n    return T().padAngle(r);\n  },\n  K = function (e) {\n    var r = e.width,\n      n = e.height,\n      t = e.innerRadiusRatio,\n      o = e.innerRadiusOffset,\n      i = [r / 2, n / 2],\n      a = Math.min(r, n) / 2,\n      c = a * t,\n      l = a * (t - o);\n    return {\n      center: i,\n      radius: a,\n      innerRadius: c,\n      arcGenerator: L().outerRadius(a).innerRadius(c),\n      ribbonGenerator: S().radius(l)\n    };\n  },\n  N = function (e) {\n    var r = e.chord,\n      n = e.data,\n      t = e.keys,\n      o = e.getLabel,\n      i = e.formatValue,\n      a = e.getColor,\n      c = r(n),\n      l = c.groups.map(function (e) {\n        var r = V({}, e, {\n          id: t[e.index],\n          formattedValue: i(e.value)\n        });\n        return V({}, r, {\n          label: o(r),\n          color: a(r)\n        });\n      });\n    return {\n      arcs: l,\n      ribbons: c.map(function (e) {\n        var r = V({}, e.source, {\n            id: t[e.source.index],\n            formattedValue: i(e.source.value)\n          }),\n          n = V({}, e.target, {\n            id: t[e.target.index],\n            formattedValue: i(e.target.value)\n          });\n        return V({}, e, {\n          id: [r.id, n.id].sort().join(\".\"),\n          source: V({}, r, {\n            label: o(r),\n            color: a(r)\n          }),\n          target: V({}, n, {\n            label: o(n),\n            color: a(n)\n          })\n        });\n      })\n    };\n  },\n  Q = function (e) {\n    var r = e.startAngle,\n      n = e.endAngle,\n      t = e.arcGenerator;\n    return I([r, n], function (e, r) {\n      return t({\n        startAngle: e,\n        endAngle: r\n      });\n    });\n  },\n  U = function (e) {\n    var r = e.sourceStartAngle,\n      n = e.sourceEndAngle,\n      t = e.targetStartAngle,\n      o = e.targetEndAngle,\n      i = e.ribbonGenerator;\n    return I([r, n, t, o], function (e, r, n, t) {\n      return i({\n        source: {\n          startAngle: Math.min(e, r),\n          endAngle: Math.max(r, e)\n        },\n        target: {\n          startAngle: Math.min(n, t),\n          endAngle: Math.max(t, n)\n        }\n      });\n    });\n  },\n  X = function (e) {\n    var n = e.padAngle;\n    return r(function () {\n      return J({\n        padAngle: n\n      });\n    }, [n]);\n  },\n  Y = function (e) {\n    var n = e.width,\n      t = e.height,\n      o = e.innerRadiusRatio,\n      i = e.innerRadiusOffset;\n    return r(function () {\n      return K({\n        width: n,\n        height: t,\n        innerRadiusRatio: o,\n        innerRadiusOffset: i\n      });\n    }, [n, t, o, i]);\n  },\n  Z = function (e) {\n    var n = e.chord,\n      t = e.getColor,\n      o = e.keys,\n      i = e.data,\n      a = e.getLabel,\n      c = e.formatValue;\n    return r(function () {\n      return N({\n        chord: n,\n        data: i,\n        keys: o,\n        getLabel: a,\n        formatValue: c,\n        getColor: t\n      });\n    }, [n, t, o, i, a, c]);\n  },\n  $ = function (e) {\n    var n = e.data,\n      t = e.keys,\n      o = e.label,\n      i = void 0 === o ? D.label : o,\n      a = e.valueFormat,\n      c = e.width,\n      s = e.height,\n      u = e.innerRadiusRatio,\n      b = void 0 === u ? D.innerRadiusRatio : u,\n      v = e.innerRadiusOffset,\n      f = void 0 === v ? D.innerRadiusOffset : v,\n      g = e.padAngle,\n      p = void 0 === g ? D.padAngle : g,\n      h = e.colors,\n      y = void 0 === h ? D.colors : h,\n      m = X({\n        padAngle: p\n      }),\n      A = Y({\n        width: c,\n        height: s,\n        innerRadiusRatio: b,\n        innerRadiusOffset: f\n      }),\n      R = A.center,\n      O = A.radius,\n      C = A.innerRadius,\n      M = A.arcGenerator,\n      x = A.ribbonGenerator,\n      k = r(function () {\n        return l(i);\n      }, [i]),\n      E = d(a),\n      B = W(y, \"id\"),\n      I = Z({\n        chord: m,\n        getColor: B,\n        keys: t,\n        data: n,\n        getLabel: k,\n        formatValue: E\n      });\n    return {\n      center: R,\n      chord: m,\n      radius: O,\n      innerRadius: C,\n      arcGenerator: M,\n      ribbonGenerator: x,\n      getColor: B,\n      arcs: I.arcs,\n      ribbons: I.ribbons\n    };\n  },\n  _ = function (e) {\n    var t = e.arcOpacity,\n      o = void 0 === t ? D.arcOpacity : t,\n      i = e.activeArcOpacity,\n      a = void 0 === i ? D.activeArcOpacity : i,\n      c = e.inactiveArcOpacity,\n      l = void 0 === c ? D.inactiveArcOpacity : c,\n      d = e.ribbons,\n      s = e.ribbonOpacity,\n      u = void 0 === s ? D.ribbonOpacity : s,\n      b = e.activeRibbonOpacity,\n      v = void 0 === b ? D.activeRibbonOpacity : b,\n      f = e.inactiveRibbonOpacity,\n      g = void 0 === f ? D.inactiveRibbonOpacity : f,\n      p = n(null),\n      h = p[0],\n      y = p[1],\n      m = n(null),\n      A = m[0],\n      R = m[1],\n      O = r(function () {\n        var e = [],\n          r = [];\n        return h && (e.push(h.id), d.filter(function (e) {\n          return e.source.id === h.id || e.target.id === h.id;\n        }).forEach(function (e) {\n          r.push(e.id);\n        })), A && (e.push(A.source.id), e.push(A.target.id), r.push(A.id)), {\n          selectedArcIds: e,\n          selectedRibbonIds: r\n        };\n      }, [h, A, d]),\n      C = O.selectedArcIds.length > 1 || O.selectedRibbonIds.length > 0,\n      M = r(function () {\n        return function (e) {\n          return C ? O.selectedArcIds.includes(e.id) ? a : l : o;\n        };\n      }, [C, O.selectedArcIds, o, a, l]),\n      x = r(function () {\n        return function (e) {\n          return C ? O.selectedRibbonIds.includes(e.id) ? v : g : u;\n        };\n      }, [C, O.selectedRibbonIds, u, v, g]);\n    return V({\n      currentArc: h,\n      setCurrentArc: y,\n      currentRibbon: A,\n      setCurrentRibbon: R,\n      hasSelection: C\n    }, O, {\n      getArcOpacity: M,\n      getRibbonOpacity: x\n    });\n  },\n  ee = function (e) {\n    var n = e.center,\n      t = e.radius,\n      o = e.arcs,\n      i = e.arcGenerator,\n      a = e.ribbons,\n      c = e.ribbonGenerator;\n    return r(function () {\n      return {\n        center: n,\n        radius: t,\n        arcs: o,\n        arcGenerator: i,\n        ribbons: a,\n        ribbonGenerator: c\n      };\n    }, [n, t, o, i, a, c]);\n  },\n  re = e(function (e) {\n    var n = e.ribbon,\n      o = e.ribbonGenerator,\n      i = e.animatedProps,\n      a = e.borderWidth,\n      c = e.blendMode,\n      l = e.isInteractive,\n      d = e.setCurrent,\n      s = e.onMouseEnter,\n      u = e.onMouseMove,\n      b = e.onMouseLeave,\n      v = e.onClick,\n      f = e.tooltip,\n      g = x(),\n      p = g.showTooltipFromEvent,\n      h = g.hideTooltip,\n      y = r(function () {\n        if (l) return function (e) {\n          d(n), p(t(f, {\n            ribbon: n\n          }), e), null == s || s(n, e);\n        };\n      }, [l, p, f, n, s, d]),\n      m = r(function () {\n        if (l) return function (e) {\n          p(t(f, {\n            ribbon: n\n          }), e), null == u || u(n, e);\n        };\n      }, [l, p, f, n, u]),\n      A = r(function () {\n        if (l) return function (e) {\n          d(null), h(), null == b || b(n, e);\n        };\n      }, [l, h, n, b, d]),\n      R = r(function () {\n        if (l && v) return function (e) {\n          return null == v ? void 0 : v(n, e);\n        };\n      }, [l, n, v]);\n    return k(G.path, {\n      \"data-testid\": \"ribbon.\" + n.source.id + \".\" + n.target.id,\n      d: U({\n        sourceStartAngle: i.sourceStartAngle,\n        sourceEndAngle: i.sourceEndAngle,\n        targetStartAngle: i.targetStartAngle,\n        targetEndAngle: i.targetEndAngle,\n        ribbonGenerator: o\n      }),\n      fill: i.color,\n      opacity: i.opacity,\n      strokeWidth: a,\n      stroke: i.borderColor,\n      style: {\n        mixBlendMode: c\n      },\n      onMouseEnter: y,\n      onMouseMove: m,\n      onMouseLeave: A,\n      onClick: R\n    });\n  }),\n  ne = function (e, r) {\n    var n,\n      t,\n      o = e.source,\n      i = e.target;\n    if (o.startAngle < i.startAngle ? (n = o, t = i) : (n = i, t = o), r) {\n      var a = b(n),\n        c = b(t);\n      return {\n        sourceStartAngle: a,\n        sourceEndAngle: a,\n        targetStartAngle: c,\n        targetEndAngle: c\n      };\n    }\n    return {\n      sourceStartAngle: n.startAngle,\n      sourceEndAngle: n.endAngle,\n      targetStartAngle: t.startAngle,\n      targetEndAngle: t.endAngle\n    };\n  },\n  te = e(function (e) {\n    var r = e.ribbons,\n      n = e.ribbonGenerator,\n      t = e.borderWidth,\n      o = e.borderColor,\n      i = e.getOpacity,\n      a = e.blendMode,\n      c = e.isInteractive,\n      l = e.setCurrent,\n      d = e.onMouseEnter,\n      b = e.onMouseMove,\n      v = e.onMouseLeave,\n      f = e.onClick,\n      g = e.tooltip,\n      p = s(),\n      h = p.animate,\n      y = p.config,\n      m = u(),\n      A = B(o, m),\n      R = w(r, {\n        keys: function (e) {\n          return e.id;\n        },\n        initial: function (e) {\n          return V({}, ne(e, !1), {\n            color: e.source.color,\n            opacity: i(e),\n            borderColor: A(e.source)\n          });\n        },\n        from: function (e) {\n          return V({}, ne(e, !1), {\n            color: e.source.color,\n            opacity: 0,\n            borderColor: A(e.source)\n          });\n        },\n        update: function (e) {\n          return V({}, ne(e, !1), {\n            color: e.source.color,\n            opacity: i(e),\n            borderColor: A(e.source)\n          });\n        },\n        leave: function (e) {\n          return V({}, ne(e, !1), {\n            color: e.source.color,\n            opacity: 0,\n            borderColor: A(e.source)\n          });\n        },\n        expires: !0,\n        config: y,\n        immediate: !h\n      });\n    return k(E, {\n      children: R(function (e, r) {\n        return k(re, {\n          ribbon: r,\n          ribbonGenerator: n,\n          animatedProps: e,\n          borderWidth: t,\n          blendMode: a,\n          setCurrent: l,\n          isInteractive: c,\n          tooltip: g,\n          onMouseEnter: d,\n          onMouseMove: b,\n          onMouseLeave: v,\n          onClick: f\n        }, r.id);\n      })\n    });\n  }),\n  oe = e(function (e) {\n    var n = e.arc,\n      o = e.animatedProps,\n      i = e.borderWidth,\n      a = e.arcGenerator,\n      c = e.setCurrent,\n      l = e.isInteractive,\n      d = e.onMouseEnter,\n      s = e.onMouseMove,\n      u = e.onMouseLeave,\n      b = e.onClick,\n      v = e.tooltip,\n      f = x(),\n      g = f.showTooltipFromEvent,\n      p = f.hideTooltip,\n      h = r(function () {\n        if (l) return function (e) {\n          c(n), g(t(v, {\n            arc: n\n          }), e), null == d || d(n, e);\n        };\n      }, [l, g, v, n, d, c]),\n      y = r(function () {\n        if (l) return function (e) {\n          g(t(v, {\n            arc: n\n          }), e), null == s || s(n, e);\n        };\n      }, [l, g, v, n, s]),\n      m = r(function () {\n        if (l) return function (e) {\n          c(null), p(), null == u || u(n, e);\n        };\n      }, [l, p, n, u, c]),\n      A = r(function () {\n        if (l && b) return function (e) {\n          return null == b ? void 0 : b(n, e);\n        };\n      }, [l, n, b]);\n    return k(G.path, {\n      \"data-testid\": \"arc.\" + n.id,\n      d: Q({\n        startAngle: o.startAngle,\n        endAngle: o.endAngle,\n        arcGenerator: a\n      }),\n      fill: o.color,\n      opacity: o.opacity,\n      strokeWidth: i,\n      stroke: o.borderColor,\n      onMouseEnter: h,\n      onMouseMove: y,\n      onMouseLeave: m,\n      onClick: A\n    });\n  }),\n  ie = e(function (e) {\n    var r = e.arcs,\n      n = e.borderWidth,\n      t = e.borderColor,\n      o = e.getOpacity,\n      i = e.arcGenerator,\n      a = e.setCurrent,\n      c = e.isInteractive,\n      l = e.onMouseEnter,\n      d = e.onMouseMove,\n      b = e.onMouseLeave,\n      v = e.onClick,\n      f = e.tooltip,\n      g = s(),\n      p = g.animate,\n      h = g.config,\n      y = u(),\n      m = B(t, y),\n      A = w(r, {\n        keys: function (e) {\n          return e.id;\n        },\n        initial: function (e) {\n          return {\n            startAngle: e.startAngle,\n            endAngle: e.endAngle,\n            color: e.color,\n            opacity: o(e),\n            borderColor: m(e)\n          };\n        },\n        from: function (e) {\n          return {\n            startAngle: e.startAngle,\n            endAngle: e.endAngle,\n            color: e.color,\n            opacity: 0,\n            borderColor: m(e)\n          };\n        },\n        update: function (e) {\n          return {\n            startAngle: e.startAngle,\n            endAngle: e.endAngle,\n            color: e.color,\n            opacity: o(e),\n            borderColor: m(e)\n          };\n        },\n        leave: function (e) {\n          return {\n            startAngle: e.startAngle,\n            endAngle: e.endAngle,\n            color: e.color,\n            opacity: 0,\n            borderColor: m(e)\n          };\n        },\n        expires: !0,\n        config: h,\n        immediate: !p\n      });\n    return k(E, {\n      children: A(function (e, r) {\n        return k(oe, {\n          arc: r,\n          arcGenerator: i,\n          animatedProps: e,\n          borderWidth: n,\n          setCurrent: a,\n          isInteractive: c,\n          tooltip: f,\n          onMouseEnter: l,\n          onMouseMove: d,\n          onMouseLeave: b,\n          onClick: v\n        }, r.id);\n      })\n    });\n  }),\n  ae = e(function (e) {\n    var n = e.arcs,\n      t = e.radius,\n      o = e.rotation,\n      i = e.color,\n      a = s(),\n      c = a.animate,\n      l = a.config,\n      d = u(),\n      f = B(i, d),\n      g = r(function () {\n        return n.map(function (e) {\n          var r = b(e),\n            n = v(t, r, o);\n          return {\n            id: e.id,\n            label: e.label,\n            x: n.x,\n            y: n.y,\n            rotation: n.rotate,\n            color: f(e),\n            textAnchor: n.align,\n            dominantBaseline: n.baseline\n          };\n        });\n      }, [n, t, o, f]),\n      p = w(g, {\n        keys: function (e) {\n          return e.id;\n        },\n        initial: function (e) {\n          return {\n            x: e.x,\n            y: e.y,\n            rotation: e.rotation,\n            color: e.color\n          };\n        },\n        from: function (e) {\n          return {\n            x: e.x,\n            y: e.y,\n            rotation: e.rotation,\n            color: e.color\n          };\n        },\n        enter: function (e) {\n          return {\n            x: e.x,\n            y: e.y,\n            rotation: e.rotation,\n            color: e.color\n          };\n        },\n        update: function (e) {\n          return {\n            x: e.x,\n            y: e.y,\n            rotation: e.rotation,\n            color: e.color\n          };\n        },\n        expires: !0,\n        config: l,\n        immediate: !c\n      });\n    return k(E, {\n      children: p(function (e, r) {\n        return k(G.text, {\n          \"data-testid\": \"label.\" + r.id,\n          style: V({}, d.labels.text, {\n            pointerEvents: \"none\",\n            fill: e.color\n          }),\n          transform: I([e.x, e.y, e.rotation], function (e, r, n) {\n            return \"translate(\" + e + \", \" + r + \") rotate(\" + n + \")\";\n          }),\n          textAnchor: r.textAnchor,\n          dominantBaseline: r.dominantBaseline,\n          children: r.label\n        }, r.id);\n      })\n    });\n  }),\n  ce = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  le = function (e) {\n    var r = e.data,\n      n = e.keys,\n      i = e.label,\n      a = e.valueFormat,\n      c = e.margin,\n      l = e.width,\n      d = e.height,\n      s = e.innerRadiusRatio,\n      u = void 0 === s ? z.innerRadiusRatio : s,\n      b = e.innerRadiusOffset,\n      v = void 0 === b ? z.innerRadiusOffset : b,\n      f = e.padAngle,\n      h = void 0 === f ? z.padAngle : f,\n      y = e.layers,\n      m = void 0 === y ? z.layers : y,\n      R = e.colors,\n      O = void 0 === R ? z.colors : R,\n      C = e.arcBorderWidth,\n      M = void 0 === C ? z.arcBorderWidth : C,\n      x = e.arcBorderColor,\n      E = void 0 === x ? z.arcBorderColor : x,\n      W = e.arcOpacity,\n      B = void 0 === W ? z.arcOpacity : W,\n      I = e.activeArcOpacity,\n      G = void 0 === I ? z.activeArcOpacity : I,\n      w = e.inactiveArcOpacity,\n      L = void 0 === w ? z.inactiveArcOpacity : w,\n      T = e.arcTooltip,\n      S = void 0 === T ? z.arcTooltip : T,\n      F = e.ribbonBorderWidth,\n      P = void 0 === F ? z.ribbonBorderWidth : F,\n      j = e.ribbonBorderColor,\n      H = void 0 === j ? z.ribbonBorderColor : j,\n      D = e.ribbonBlendMode,\n      q = void 0 === D ? z.ribbonBlendMode : D,\n      J = e.ribbonOpacity,\n      K = void 0 === J ? z.ribbonOpacity : J,\n      N = e.activeRibbonOpacity,\n      Q = void 0 === N ? z.activeRibbonOpacity : N,\n      U = e.inactiveRibbonOpacity,\n      X = void 0 === U ? z.inactiveRibbonOpacity : U,\n      Y = e.ribbonTooltip,\n      Z = void 0 === Y ? z.ribbonTooltip : Y,\n      re = e.enableLabel,\n      ne = void 0 === re ? z.enableLabel : re,\n      oe = e.labelOffset,\n      ce = void 0 === oe ? z.labelOffset : oe,\n      le = e.labelRotation,\n      de = void 0 === le ? z.labelRotation : le,\n      se = e.labelTextColor,\n      ue = void 0 === se ? z.labelTextColor : se,\n      be = e.isInteractive,\n      ve = void 0 === be ? z.isInteractive : be,\n      fe = e.onArcMouseEnter,\n      ge = e.onArcMouseMove,\n      pe = e.onArcMouseLeave,\n      he = e.onArcClick,\n      ye = e.onRibbonMouseEnter,\n      me = e.onRibbonMouseMove,\n      Ae = e.onRibbonMouseLeave,\n      Re = e.onRibbonClick,\n      Oe = e.legends,\n      Ce = void 0 === Oe ? z.legends : Oe,\n      Me = e.role,\n      xe = void 0 === Me ? z.role : Me,\n      ke = e.ariaLabel,\n      Ee = e.ariaLabelledBy,\n      We = e.ariaDescribedBy,\n      Be = g(l, d, c),\n      Ie = Be.margin,\n      Ge = Be.innerWidth,\n      we = Be.innerHeight,\n      Le = Be.outerWidth,\n      Te = Be.outerHeight,\n      Se = $({\n        data: r,\n        keys: n,\n        label: i,\n        valueFormat: a,\n        width: Ge,\n        height: we,\n        innerRadiusRatio: u,\n        innerRadiusOffset: v,\n        padAngle: h,\n        colors: O\n      }),\n      Fe = Se.center,\n      Ve = Se.radius,\n      Pe = Se.arcGenerator,\n      je = Se.ribbonGenerator,\n      He = Se.arcs,\n      De = Se.ribbons,\n      ze = _({\n        arcOpacity: B,\n        activeArcOpacity: G,\n        inactiveArcOpacity: L,\n        ribbons: De,\n        ribbonOpacity: K,\n        activeRibbonOpacity: Q,\n        inactiveRibbonOpacity: X\n      }),\n      qe = ze.setCurrentArc,\n      Je = ze.setCurrentRibbon,\n      Ke = ze.getArcOpacity,\n      Ne = ze.getRibbonOpacity,\n      Qe = ee({\n        center: Fe,\n        radius: Ve,\n        arcs: He,\n        arcGenerator: Pe,\n        ribbons: De,\n        ribbonGenerator: je\n      });\n    if (Ve <= 0) return null;\n    var Ue = He.map(function (e) {\n        return {\n          id: e.id,\n          label: e.label,\n          color: e.color\n        };\n      }),\n      Xe = {\n        ribbons: null,\n        arcs: null,\n        labels: null,\n        legends: null\n      };\n    return m.includes(\"ribbons\") && (Xe.ribbons = k(\"g\", {\n      transform: \"translate(\" + Fe[0] + \", \" + Fe[1] + \")\",\n      children: k(te, {\n        ribbons: De,\n        ribbonGenerator: je,\n        borderWidth: P,\n        borderColor: H,\n        getOpacity: Ne,\n        blendMode: q,\n        setCurrent: Je,\n        isInteractive: ve,\n        onMouseEnter: ye,\n        onMouseMove: me,\n        onMouseLeave: Ae,\n        onClick: Re,\n        tooltip: Z\n      })\n    }, \"ribbons\")), m.includes(\"arcs\") && (Xe.arcs = k(\"g\", {\n      transform: \"translate(\" + Fe[0] + \", \" + Fe[1] + \")\",\n      children: k(ie, {\n        arcs: He,\n        arcGenerator: Pe,\n        borderWidth: M,\n        borderColor: E,\n        getOpacity: Ke,\n        setCurrent: qe,\n        isInteractive: ve,\n        onMouseEnter: fe,\n        onMouseMove: ge,\n        onMouseLeave: pe,\n        onClick: he,\n        tooltip: S\n      })\n    }, \"arcs\")), m.includes(\"labels\") && ne && (Xe.labels = k(\"g\", {\n      transform: \"translate(\" + Fe[0] + \", \" + Fe[1] + \")\",\n      children: k(ae, {\n        arcs: He,\n        radius: Ve + ce,\n        rotation: de,\n        color: ue\n      })\n    }, \"labels\")), m.includes(\"legends\") && Ce.length > 0 && (Xe.legends = k(o, {\n      children: Ce.map(function (e, r) {\n        return k(A, V({}, e, {\n          containerWidth: Ge,\n          containerHeight: we,\n          data: Ue\n        }), r);\n      })\n    }, \"legends\")), k(p, {\n      width: Le,\n      height: Te,\n      margin: Ie,\n      role: xe,\n      ariaLabel: ke,\n      ariaLabelledBy: Ee,\n      ariaDescribedBy: We,\n      children: m.map(function (e, r) {\n        var n;\n        return \"function\" == typeof e ? k(o, {\n          children: t(e, Qe)\n        }, r) : null != (n = null == Xe ? void 0 : Xe[e]) ? n : null;\n      })\n    });\n  },\n  de = function (e) {\n    var r = e.isInteractive,\n      n = void 0 === r ? z.isInteractive : r,\n      t = e.animate,\n      o = void 0 === t ? z.animate : t,\n      i = e.motionConfig,\n      a = void 0 === i ? z.motionConfig : i,\n      c = e.theme,\n      l = e.renderWrapper,\n      d = P(e, ce);\n    return k(f, {\n      animate: o,\n      isInteractive: n,\n      motionConfig: a,\n      renderWrapper: l,\n      theme: c,\n      children: k(le, V({\n        isInteractive: n\n      }, d))\n    });\n  },\n  se = [\"theme\", \"isInteractive\", \"animate\", \"motionConfig\", \"renderWrapper\"],\n  ue = function (e) {\n    var r = e.event,\n      n = e.canvasEl,\n      t = e.center,\n      o = e.margin,\n      i = e.radius,\n      a = e.innerRadius,\n      c = e.arcs,\n      l = y(n, r),\n      d = l[0],\n      s = l[1],\n      u = o.left + t[0],\n      b = o.top + t[1];\n    return F(u, b, i, a, c, d, s);\n  },\n  be = function (e) {\n    var r = e.pixelRatio,\n      n = void 0 === r ? q.pixelRatio : r,\n      o = e.margin,\n      l = e.data,\n      d = e.keys,\n      s = e.width,\n      f = e.height,\n      p = e.label,\n      y = void 0 === p ? q.label : p,\n      m = e.valueFormat,\n      A = e.innerRadiusRatio,\n      O = void 0 === A ? q.innerRadiusRatio : A,\n      C = e.innerRadiusOffset,\n      M = void 0 === C ? q.innerRadiusOffset : C,\n      E = e.padAngle,\n      W = void 0 === E ? q.padAngle : E,\n      I = e.layers,\n      G = void 0 === I ? q.layers : I,\n      w = e.colors,\n      L = void 0 === w ? q.colors : w,\n      T = e.arcBorderWidth,\n      S = void 0 === T ? q.arcBorderWidth : T,\n      F = e.arcBorderColor,\n      P = void 0 === F ? q.arcBorderColor : F,\n      j = e.arcOpacity,\n      H = void 0 === j ? q.arcOpacity : j,\n      D = e.activeArcOpacity,\n      z = void 0 === D ? q.activeArcOpacity : D,\n      J = e.inactiveArcOpacity,\n      K = void 0 === J ? q.inactiveArcOpacity : J,\n      N = e.arcTooltip,\n      Q = void 0 === N ? q.arcTooltip : N,\n      U = e.ribbonBorderWidth,\n      X = void 0 === U ? q.ribbonBorderWidth : U,\n      Y = e.ribbonBorderColor,\n      Z = void 0 === Y ? q.ribbonBorderColor : Y,\n      re = e.ribbonOpacity,\n      ne = void 0 === re ? q.ribbonOpacity : re,\n      te = e.activeRibbonOpacity,\n      oe = void 0 === te ? q.activeRibbonOpacity : te,\n      ie = e.inactiveRibbonOpacity,\n      ae = void 0 === ie ? q.inactiveRibbonOpacity : ie,\n      ce = e.enableLabel,\n      le = void 0 === ce ? q.enableLabel : ce,\n      de = e.labelOffset,\n      se = void 0 === de ? q.labelOffset : de,\n      be = e.labelRotation,\n      ve = void 0 === be ? q.labelRotation : be,\n      fe = e.labelTextColor,\n      ge = void 0 === fe ? q.labelTextColor : fe,\n      pe = e.isInteractive,\n      he = void 0 === pe ? q.isInteractive : pe,\n      ye = e.onArcMouseEnter,\n      me = e.onArcMouseMove,\n      Ae = e.onArcMouseLeave,\n      Re = e.onArcClick,\n      Oe = e.legends,\n      Ce = void 0 === Oe ? q.legends : Oe,\n      Me = i(null),\n      xe = g(s, f, o),\n      ke = xe.innerWidth,\n      Ee = xe.innerHeight,\n      We = xe.outerWidth,\n      Be = xe.outerHeight,\n      Ie = xe.margin,\n      Ge = $({\n        data: l,\n        keys: d,\n        label: y,\n        valueFormat: m,\n        width: ke,\n        height: Ee,\n        innerRadiusRatio: O,\n        innerRadiusOffset: M,\n        padAngle: W,\n        colors: L\n      }),\n      we = Ge.center,\n      Le = Ge.radius,\n      Te = Ge.innerRadius,\n      Se = Ge.arcGenerator,\n      Fe = Ge.ribbonGenerator,\n      Ve = Ge.arcs,\n      Pe = Ge.ribbons,\n      je = _({\n        arcOpacity: H,\n        activeArcOpacity: z,\n        inactiveArcOpacity: K,\n        ribbons: Pe,\n        ribbonOpacity: ne,\n        activeRibbonOpacity: oe,\n        inactiveRibbonOpacity: ae\n      }),\n      He = je.currentArc,\n      De = je.setCurrentArc,\n      ze = je.getArcOpacity,\n      qe = je.getRibbonOpacity,\n      Je = u(),\n      Ke = B(ge, Je),\n      Ne = B(P, Je),\n      Qe = B(Z, Je),\n      Ue = ee({\n        center: we,\n        radius: Le,\n        arcs: Ve,\n        arcGenerator: Se,\n        ribbons: Pe,\n        ribbonGenerator: Fe\n      });\n    a(function () {\n      if (null !== Me.current) {\n        Me.current.width = We * n, Me.current.height = Be * n;\n        var e = Me.current.getContext(\"2d\");\n        e.scale(n, n), e.fillStyle = Je.background, e.fillRect(0, 0, We, Be), Le <= 0 || G.forEach(function (r) {\n          if (\"ribbons\" === r && (e.save(), e.translate(Ie.left + we[0], Ie.top + we[1]), Fe.context(e), Pe.forEach(function (r) {\n            e.save(), e.globalAlpha = qe(r), e.fillStyle = r.source.color, e.beginPath(), Fe(r), e.fill(), X > 0 && (e.strokeStyle = Qe(r.source), e.lineWidth = X, e.stroke()), e.restore();\n          }), e.restore()), \"arcs\" === r && (e.save(), e.translate(Ie.left + we[0], Ie.top + we[1]), Se.context(e), Ve.forEach(function (r) {\n            e.save(), e.globalAlpha = ze(r), e.fillStyle = r.color, e.beginPath(), Se(r), e.fill(), S > 0 && (e.strokeStyle = Ne(r), e.lineWidth = S, e.stroke()), e.restore();\n          }), e.restore()), \"labels\" === r && !0 === le && (e.save(), e.translate(Ie.left + we[0], Ie.top + we[1]), e.font = Je.labels.text.fontSize + \"px \" + (Je.labels.text.fontFamily || \"sans-serif\"), Ve.forEach(function (r) {\n            var n = b(r),\n              t = v(Le + se, n, ve);\n            e.save(), e.translate(t.x, t.y), e.rotate(h(t.rotate)), e.textAlign = t.align, e.textBaseline = t.baseline, e.fillStyle = Ke(r), e.fillText(r.label, 0, 0), e.restore();\n          }), e.restore()), \"legends\" === r) {\n            e.save(), e.translate(Ie.left, Ie.top);\n            var n = Ve.map(function (e) {\n              return {\n                id: e.id,\n                label: e.label,\n                color: e.color\n              };\n            });\n            Ce.forEach(function (r) {\n              R(e, V({}, r, {\n                data: n,\n                containerWidth: ke,\n                containerHeight: Ee,\n                theme: Je\n              }));\n            }), e.restore();\n          }\n          \"function\" == typeof r && r(e, Ue);\n        });\n      }\n    }, [Me, ke, Ee, We, Be, Ie, n, we, Le, Je, G, Ve, Se, ze, S, Ne, Pe, Fe, qe, X, Qe, le, se, ve, Ke, Ce, Ue]);\n    var Xe = x(),\n      Ye = Xe.showTooltipFromEvent,\n      Ze = Xe.hideTooltip,\n      $e = c(function (e) {\n        if (null !== Me.current) {\n          var r = ue({\n            event: e,\n            canvasEl: Me.current,\n            center: we,\n            margin: Ie,\n            radius: Le,\n            innerRadius: Te,\n            arcs: Ve\n          });\n          r ? (De(r), Ye(t(Q, {\n            arc: r\n          }), e), !He && ye && ye(r, e), me && me(r, e), He && He.id !== r.id && Ae && Ae(r, e)) : (De(null), Ze(), He && Ae && Ae(He, e));\n        }\n      }, [Me, we, Ie, Le, Te, Ve, De, He, Ye, Ze, Q, ye, me, Ae]),\n      _e = c(function () {\n        De(null), Ze();\n      }, [De, Ze]),\n      er = c(function (e) {\n        if (null !== Me.current && Re) {\n          var r = ue({\n            event: e,\n            canvasEl: Me.current,\n            center: we,\n            margin: Ie,\n            radius: Le,\n            innerRadius: Te,\n            arcs: Ve\n          });\n          r && Re(r, e);\n        }\n      }, [Me, we, Ie, Le, Te, Ve, Re]);\n    return k(\"canvas\", {\n      ref: Me,\n      width: We * n,\n      height: Be * n,\n      style: {\n        width: We,\n        height: Be,\n        cursor: he ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: he ? $e : void 0,\n      onMouseMove: he ? $e : void 0,\n      onMouseLeave: he ? _e : void 0,\n      onClick: he ? er : void 0\n    });\n  },\n  ve = function (e) {\n    var r = e.theme,\n      n = e.isInteractive,\n      t = void 0 === n ? q.isInteractive : n,\n      o = e.animate,\n      i = void 0 === o ? q.animate : o,\n      a = e.motionConfig,\n      c = void 0 === a ? q.motionConfig : a,\n      l = e.renderWrapper,\n      d = P(e, se);\n    return k(f, {\n      isInteractive: t,\n      animate: i,\n      motionConfig: c,\n      theme: r,\n      renderWrapper: l,\n      children: k(be, V({\n        isInteractive: t\n      }, d))\n    });\n  },\n  fe = function (e) {\n    return k(m, {\n      children: function (r) {\n        var n = r.width,\n          t = r.height;\n        return k(de, V({}, e, {\n          width: n,\n          height: t\n        }));\n      }\n    });\n  },\n  ge = function (e) {\n    return k(m, {\n      children: function (r) {\n        var n = r.width,\n          t = r.height;\n        return k(ve, V({}, e, {\n          width: n,\n          height: t\n        }));\n      }\n    });\n  };\nexport { de as Chord, ve as ChordCanvas, fe as ResponsiveChord, ge as ResponsiveChordCanvas, q as canvasDefaultProps, D as commonDefaultProps, Q as computeArcPath, N as computeChordArcsAndRibbons, K as computeChordGenerators, J as computeChordLayout, U as computeRibbonPath, z as svgDefaultProps, $ as useChord, Z as useChordArcsAndRibbons, Y as useChordGenerators, X as useChordLayout, _ as useChordSelection, ee as useCustomLayerProps };","map":{"version":3,"names":["j","e","r","arc","k","O","id","label","value","formattedValue","color","enableChip","H","ribbon","C","rows","M","source","children","target","D","layers","padAngle","innerRadiusRatio","innerRadiusOffset","colors","scheme","arcOpacity","activeArcOpacity","inactiveArcOpacity","arcBorderWidth","arcBorderColor","from","modifiers","arcTooltip","ribbonOpacity","activeRibbonOpacity","inactiveRibbonOpacity","ribbonBorderWidth","ribbonBorderColor","ribbonBlendMode","enableLabel","labelOffset","labelRotation","labelTextColor","isInteractive","legends","animate","motionConfig","role","z","V","ribbonTooltip","q","pixelRatio","window","devicePixelRatio","J","computeChordLayout","T","K","computeChordGenerators","width","n","height","t","o","i","a","Math","min","c","l","center","radius","innerRadius","arcGenerator","L","outerRadius","ribbonGenerator","S","N","computeChordArcsAndRibbons","chord","data","keys","getLabel","formatValue","getColor","groups","map","index","arcs","ribbons","sort","join","Q","computeArcPath","startAngle","endAngle","I","U","computeRibbonPath","sourceStartAngle","sourceEndAngle","targetStartAngle","targetEndAngle","max","X","useChordLayout","Y","useChordGenerators","Z","useChordArcsAndRibbons","$","useChord","valueFormat","s","u","b","v","f","g","p","h","y","m","A","R","x","E","d","B","W","_","useChordSelection","push","filter","forEach","selectedArcIds","selectedRibbonIds","length","includes","currentArc","setCurrentArc","currentRibbon","setCurrentRibbon","hasSelection","getArcOpacity","getRibbonOpacity","ee","useCustomLayerProps","re","animatedProps","borderWidth","blendMode","setCurrent","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","showTooltipFromEvent","hideTooltip","G","path","fill","opacity","strokeWidth","stroke","borderColor","style","mixBlendMode","ne","getRibbonAngles","te","getOpacity","config","w","initial","update","leave","expires","immediate","oe","ie","ae","rotation","rotate","textAnchor","align","dominantBaseline","baseline","enter","text","labels","pointerEvents","transform","ce","le","InnerChord","margin","F","P","de","se","ue","be","ve","fe","onArcMouseEnter","ge","onArcMouseMove","pe","onArcMouseLeave","he","onArcClick","ye","onRibbonMouseEnter","me","onRibbonMouseMove","Ae","onRibbonMouseLeave","Re","onRibbonClick","Oe","Ce","Me","xe","ke","ariaLabel","Ee","ariaLabelledBy","We","ariaDescribedBy","Be","Ie","Ge","innerWidth","we","innerHeight","Le","outerWidth","Te","outerHeight","Se","Fe","Ve","Pe","je","He","De","ze","qe","Je","Ke","Ne","Qe","Ue","Xe","containerWidth","containerHeight","Chord","theme","renderWrapper","getArcFromMouseEvent","event","canvasEl","left","top","InnerChordCanvas","current","getContext","scale","fillStyle","background","fillRect","save","translate","context","globalAlpha","beginPath","strokeStyle","lineWidth","restore","font","fontSize","fontFamily","textAlign","textBaseline","fillText","Ye","Ze","$e","_e","er","ref","cursor","ChordCanvas","ResponsiveChord","ResponsiveChordCanvas","canvasDefaultProps","commonDefaultProps","svgDefaultProps"],"sources":["/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordArcTooltip.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordRibbonTooltip.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/defaults.ts","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/compute.ts","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/hooks.ts","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordRibbon.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordRibbons.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordArc.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordArcs.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordLabels.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/Chord.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ChordCanvas.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ResponsiveChord.tsx","/Users/lennoxo/Documents/Intellij/Java/SpringBoot/PersonalProject/FianaceTrackerProject/02-Frontend/03-Frontend/react-library/node_modules/@nivo/chord/src/ResponsiveChordCanvas.tsx"],"sourcesContent":["import { memo } from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ArcTooltipComponentProps } from './types'\n\nexport const ChordArcTooltip = memo(({ arc }: ArcTooltipComponentProps) => (\n    <BasicTooltip id={arc.label} value={arc.formattedValue} color={arc.color} enableChip={true} />\n))\n","import { memo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { RibbonTooltipComponentProps } from './types'\n\nexport const ChordRibbonTooltip = memo(({ ribbon }: RibbonTooltipComponentProps) => (\n    <TableTooltip\n        rows={[\n            [\n                <Chip key=\"chip\" color={ribbon.source.color} />,\n                <strong key=\"id\">{ribbon.source.label}</strong>,\n                ribbon.source.formattedValue,\n            ],\n            [\n                <Chip key=\"chip\" color={ribbon.target.color} />,\n                <strong key=\"id\">{ribbon.target.label}</strong>,\n                ribbon.target.formattedValue,\n            ],\n        ]}\n    />\n))\n","import { LayerId, ChordSvgProps, ChordCommonProps } from './types'\nimport { ChordArcTooltip } from './ChordArcTooltip'\nimport { ChordRibbonTooltip } from './ChordRibbonTooltip'\n\nexport const commonDefaultProps: Omit<\n    ChordCommonProps,\n    | 'valueFormat'\n    | 'margin'\n    | 'theme'\n    | 'onArcMouseEnter'\n    | 'onArcMouseMove'\n    | 'onArcMouseLeave'\n    | 'onArcClick'\n    | 'onRibbonMouseEnter'\n    | 'onRibbonMouseMove'\n    | 'onRibbonMouseLeave'\n    | 'onRibbonClick'\n    | 'renderWrapper'\n    | 'ariaLabel'\n    | 'ariaLabelledBy'\n    | 'ariaDescribedBy'\n> & {\n    layers: LayerId[]\n} = {\n    layers: ['ribbons', 'arcs', 'labels', 'legends'],\n\n    padAngle: 0,\n    innerRadiusRatio: 0.9,\n    innerRadiusOffset: 0,\n\n    colors: { scheme: 'nivo' },\n\n    arcOpacity: 1,\n    activeArcOpacity: 1,\n    inactiveArcOpacity: 0.15,\n    arcBorderWidth: 1,\n    arcBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    arcTooltip: ChordArcTooltip,\n\n    ribbonOpacity: 0.5,\n    activeRibbonOpacity: 0.85,\n    inactiveRibbonOpacity: 0.15,\n    ribbonBorderWidth: 1,\n    ribbonBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    ribbonBlendMode: 'normal',\n\n    enableLabel: true,\n    label: 'id',\n    labelOffset: 12,\n    labelRotation: 0,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    isInteractive: true,\n\n    legends: [],\n\n    animate: true,\n    motionConfig: 'gentle',\n\n    role: 'img',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    ribbonBlendMode: 'normal' as NonNullable<ChordSvgProps['ribbonBlendMode']>,\n    ribbonTooltip: ChordRibbonTooltip,\n}\n\nexport const canvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","import { to, SpringValues } from '@react-spring/web'\nimport { arc as d3Arc } from 'd3-shape'\nimport { chord as d3Chord, ChordLayout, ribbon as d3Ribbon } from 'd3-chord'\nimport {\n    ArcDatum,\n    ChordCommonProps,\n    ChordDataProps,\n    RibbonAnimatedProps,\n    RibbonDatum,\n    RibbonGenerator,\n    ArcGenerator,\n    ArcAnimatedProps,\n} from './types'\nimport { OrdinalColorScale } from '@nivo/colors'\n\nexport const computeChordLayout = ({ padAngle }: { padAngle: ChordCommonProps['padAngle'] }) =>\n    d3Chord().padAngle(padAngle)\n\nexport const computeChordGenerators = ({\n    width,\n    height,\n    innerRadiusRatio,\n    innerRadiusOffset,\n}: {\n    width: number\n    height: number\n    innerRadiusRatio: ChordCommonProps['innerRadiusRatio']\n    innerRadiusOffset: ChordCommonProps['innerRadiusOffset']\n}) => {\n    const center: [number, number] = [width / 2, height / 2]\n    const radius = Math.min(width, height) / 2\n    const innerRadius = radius * innerRadiusRatio\n    const ribbonRadius = radius * (innerRadiusRatio - innerRadiusOffset)\n\n    return {\n        center,\n        radius,\n        innerRadius,\n        arcGenerator: d3Arc()\n            .outerRadius(radius)\n            .innerRadius(innerRadius) as unknown as ArcGenerator,\n        ribbonGenerator: d3Ribbon().radius(ribbonRadius) as unknown as RibbonGenerator,\n    }\n}\n\nexport const computeChordArcsAndRibbons = ({\n    chord,\n    data,\n    keys,\n    getLabel,\n    formatValue,\n    getColor,\n}: {\n    chord: ChordLayout\n    data: ChordDataProps['data']\n    keys: ChordDataProps['keys']\n    getLabel: (arc: Omit<ArcDatum, 'label' | 'color'>) => string\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<Omit<ArcDatum, 'label' | 'color'>>\n}): {\n    arcs: ArcDatum[]\n    ribbons: RibbonDatum[]\n} => {\n    const _ribbons = chord(data)\n\n    const arcs: ArcDatum[] = _ribbons.groups.map(chordGroup => {\n        const arc: Omit<ArcDatum, 'label' | 'color'> = {\n            ...chordGroup,\n            id: keys[chordGroup.index],\n            formattedValue: formatValue(chordGroup.value),\n        }\n\n        return {\n            ...arc,\n            label: getLabel(arc),\n            color: getColor(arc),\n        }\n    })\n\n    const ribbons: RibbonDatum[] = _ribbons.map(_ribbon => {\n        const source = {\n            ..._ribbon.source,\n            id: keys[_ribbon.source.index],\n            formattedValue: formatValue(_ribbon.source.value),\n        }\n\n        const target = {\n            ..._ribbon.target,\n            id: keys[_ribbon.target.index],\n            formattedValue: formatValue(_ribbon.target.value),\n        }\n\n        return {\n            ..._ribbon,\n            // ensure id remains the same even if source/target are reversed\n            id: [source.id, target.id].sort().join('.'),\n            source: {\n                ...source,\n                label: getLabel(source),\n                color: getColor(source),\n            },\n            target: {\n                ...target,\n                label: getLabel(target),\n                color: getColor(target),\n            },\n        }\n    })\n\n    return { arcs, ribbons }\n}\n\nexport const computeArcPath = ({\n    startAngle,\n    endAngle,\n    arcGenerator,\n}: SpringValues<Pick<ArcAnimatedProps, 'startAngle' | 'endAngle'>> & {\n    arcGenerator: ArcGenerator\n}) => to([startAngle, endAngle], (startAngle, endAngle) => arcGenerator({ startAngle, endAngle }))\n\nexport const computeRibbonPath = ({\n    sourceStartAngle,\n    sourceEndAngle,\n    targetStartAngle,\n    targetEndAngle,\n    ribbonGenerator,\n}: SpringValues<\n    Pick<\n        RibbonAnimatedProps,\n        'sourceStartAngle' | 'sourceEndAngle' | 'targetStartAngle' | 'targetEndAngle'\n    >\n> & {\n    ribbonGenerator: RibbonGenerator\n}) =>\n    to(\n        [sourceStartAngle, sourceEndAngle, targetStartAngle, targetEndAngle],\n        (sourceStartAngle, sourceEndAngle, targetStartAngle, targetEndAngle) =>\n            ribbonGenerator({\n                source: {\n                    startAngle: Math.min(sourceStartAngle, sourceEndAngle),\n                    endAngle: Math.max(sourceEndAngle, sourceStartAngle),\n                },\n                target: {\n                    startAngle: Math.min(targetStartAngle, targetEndAngle),\n                    endAngle: Math.max(targetEndAngle, targetStartAngle),\n                },\n            })\n    )\n","import { useMemo, useState } from 'react'\nimport {\n    useValueFormatter,\n    // @ts-ignore\n    getLabelGenerator,\n} from '@nivo/core'\nimport { OrdinalColorScale, useOrdinalColorScale } from '@nivo/colors'\nimport { computeChordLayout, computeChordGenerators, computeChordArcsAndRibbons } from './compute'\nimport { ArcDatum, ChordCommonProps, ChordDataProps, CustomLayerProps, RibbonDatum } from './types'\nimport { commonDefaultProps } from './defaults'\nimport { ChordLayout } from 'd3-chord'\n\nexport const useChordLayout = ({ padAngle }: { padAngle: ChordCommonProps['padAngle'] }) =>\n    useMemo(() => computeChordLayout({ padAngle }), [padAngle])\n\nexport const useChordGenerators = ({\n    width,\n    height,\n    innerRadiusRatio,\n    innerRadiusOffset,\n}: {\n    width: number\n    height: number\n    innerRadiusRatio: ChordCommonProps['innerRadiusRatio']\n    innerRadiusOffset: ChordCommonProps['innerRadiusOffset']\n}) =>\n    useMemo(\n        () =>\n            computeChordGenerators({\n                width,\n                height,\n                innerRadiusRatio,\n                innerRadiusOffset,\n            }),\n        [width, height, innerRadiusRatio, innerRadiusOffset]\n    )\n\nexport const useChordArcsAndRibbons = ({\n    chord,\n    getColor,\n    keys,\n    data,\n    getLabel,\n    formatValue,\n}: {\n    chord: ChordLayout\n    data: ChordDataProps['data']\n    keys: ChordDataProps['keys']\n    getLabel: (arc: Omit<ArcDatum, 'label' | 'color'>) => string\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<Omit<ArcDatum, 'label' | 'color'>>\n}) =>\n    useMemo(\n        () =>\n            computeChordArcsAndRibbons({\n                chord,\n                data,\n                keys,\n                getLabel,\n                formatValue,\n                getColor,\n            }),\n        [chord, getColor, keys, data, getLabel, formatValue]\n    )\n\nexport const useChord = ({\n    data,\n    keys,\n    label = commonDefaultProps.label,\n    valueFormat,\n    width,\n    height,\n    innerRadiusRatio = commonDefaultProps.innerRadiusRatio,\n    innerRadiusOffset = commonDefaultProps.innerRadiusOffset,\n    padAngle = commonDefaultProps.padAngle,\n    colors = commonDefaultProps.colors,\n}: {\n    data: ChordDataProps['data']\n    keys: ChordDataProps['keys']\n    label?: ChordCommonProps['label']\n    valueFormat?: ChordCommonProps['valueFormat']\n    width: number\n    height: number\n    innerRadiusRatio?: ChordCommonProps['innerRadiusRatio']\n    innerRadiusOffset?: ChordCommonProps['innerRadiusOffset']\n    padAngle?: ChordCommonProps['padAngle']\n    colors?: ChordCommonProps['colors']\n}) => {\n    const chord = useChordLayout({ padAngle })\n    const { center, radius, innerRadius, arcGenerator, ribbonGenerator } = useChordGenerators({\n        width,\n        height,\n        innerRadiusRatio,\n        innerRadiusOffset,\n    })\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const { arcs, ribbons } = useChordArcsAndRibbons({\n        chord,\n        getColor,\n        keys,\n        data,\n        getLabel,\n        formatValue,\n    })\n\n    return {\n        center,\n        chord,\n        radius,\n        innerRadius,\n        arcGenerator,\n        ribbonGenerator,\n        getColor,\n        arcs,\n        ribbons,\n    }\n}\n\nexport const useChordSelection = ({\n    arcOpacity = commonDefaultProps.arcOpacity,\n    activeArcOpacity = commonDefaultProps.activeArcOpacity,\n    inactiveArcOpacity = commonDefaultProps.inactiveArcOpacity,\n    ribbons,\n    ribbonOpacity = commonDefaultProps.ribbonOpacity,\n    activeRibbonOpacity = commonDefaultProps.activeRibbonOpacity,\n    inactiveRibbonOpacity = commonDefaultProps.inactiveRibbonOpacity,\n}: {\n    arcOpacity?: ChordCommonProps['arcOpacity']\n    activeArcOpacity?: ChordCommonProps['activeArcOpacity']\n    inactiveArcOpacity?: ChordCommonProps['inactiveArcOpacity']\n    ribbons: RibbonDatum[]\n    ribbonOpacity?: ChordCommonProps['ribbonOpacity']\n    activeRibbonOpacity?: ChordCommonProps['activeRibbonOpacity']\n    inactiveRibbonOpacity?: ChordCommonProps['inactiveRibbonOpacity']\n}) => {\n    const [currentArc, setCurrentArc] = useState<ArcDatum | null>(null)\n    const [currentRibbon, setCurrentRibbon] = useState<RibbonDatum | null>(null)\n\n    const selection = useMemo(() => {\n        const selectedArcIds = []\n        const selectedRibbonIds = []\n\n        if (currentArc) {\n            selectedArcIds.push(currentArc.id)\n            ribbons\n                .filter(\n                    ribbon =>\n                        ribbon.source.id === currentArc.id || ribbon.target.id === currentArc.id\n                )\n                .forEach(ribbon => {\n                    selectedRibbonIds.push(ribbon.id)\n                })\n        }\n\n        if (currentRibbon) {\n            selectedArcIds.push(currentRibbon.source.id)\n            selectedArcIds.push(currentRibbon.target.id)\n            selectedRibbonIds.push(currentRibbon.id)\n        }\n\n        return { selectedArcIds, selectedRibbonIds }\n    }, [currentArc, currentRibbon, ribbons])\n\n    const hasSelection =\n        selection.selectedArcIds.length > 1 || selection.selectedRibbonIds.length > 0\n\n    const getArcOpacity = useMemo(\n        () => (arc: ArcDatum) => {\n            if (!hasSelection) return arcOpacity\n\n            return selection.selectedArcIds.includes(arc.id) ? activeArcOpacity : inactiveArcOpacity\n        },\n        [hasSelection, selection.selectedArcIds, arcOpacity, activeArcOpacity, inactiveArcOpacity]\n    )\n    const getRibbonOpacity = useMemo(\n        () => (ribbon: RibbonDatum) => {\n            if (!hasSelection) return ribbonOpacity\n\n            return selection.selectedRibbonIds.includes(ribbon.id)\n                ? activeRibbonOpacity\n                : inactiveRibbonOpacity\n        },\n        [\n            hasSelection,\n            selection.selectedRibbonIds,\n            ribbonOpacity,\n            activeRibbonOpacity,\n            inactiveRibbonOpacity,\n        ]\n    )\n\n    return {\n        currentArc,\n        setCurrentArc,\n        currentRibbon,\n        setCurrentRibbon,\n        hasSelection,\n        ...selection,\n        getArcOpacity,\n        getRibbonOpacity,\n    }\n}\n\nexport const useCustomLayerProps = ({\n    center,\n    radius,\n    arcs,\n    arcGenerator,\n    ribbons,\n    ribbonGenerator,\n}: {\n    center: [number, number]\n    radius: number\n    arcs: ArcDatum[]\n    arcGenerator: any\n    ribbons: RibbonDatum[]\n    ribbonGenerator: any\n}): CustomLayerProps =>\n    useMemo(\n        () => ({\n            center,\n            radius,\n            arcs,\n            arcGenerator,\n            ribbons,\n            ribbonGenerator,\n        }),\n        [center, radius, arcs, arcGenerator, ribbons, ribbonGenerator]\n    )\n","import { createElement, memo, useMemo, MouseEvent } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    ChordCommonProps,\n    ChordSvgProps,\n    RibbonAnimatedProps,\n    RibbonDatum,\n    RibbonGenerator,\n} from './types'\nimport { computeRibbonPath } from './compute'\n\ninterface ChordRibbonProps {\n    ribbon: RibbonDatum\n    ribbonGenerator: RibbonGenerator\n    animatedProps: SpringValues<RibbonAnimatedProps>\n    borderWidth: ChordCommonProps['ribbonBorderWidth']\n    blendMode: NonNullable<ChordSvgProps['ribbonBlendMode']>\n    setCurrent: (ribbon: RibbonDatum | null) => void\n    isInteractive: ChordCommonProps['isInteractive']\n    tooltip: NonNullable<ChordSvgProps['ribbonTooltip']>\n    onMouseEnter: ChordSvgProps['onRibbonMouseEnter']\n    onMouseMove: ChordSvgProps['onRibbonMouseMove']\n    onMouseLeave: ChordSvgProps['onRibbonMouseLeave']\n    onClick: ChordSvgProps['onRibbonClick']\n}\n\nexport const ChordRibbon = memo(\n    ({\n        ribbon,\n        ribbonGenerator,\n        animatedProps,\n        borderWidth,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: ChordRibbonProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n\n            return (event: MouseEvent) => {\n                setCurrent(ribbon)\n                showTooltipFromEvent(createElement(tooltip, { ribbon }), event)\n                onMouseEnter?.(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseEnter, setCurrent])\n\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n\n            return (event: MouseEvent) => {\n                showTooltipFromEvent(createElement(tooltip, { ribbon }), event)\n                onMouseMove?.(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseMove])\n\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n\n            return (event: MouseEvent) => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave?.(ribbon, event)\n            }\n        }, [isInteractive, hideTooltip, ribbon, onMouseLeave, setCurrent])\n\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n\n            return (event: MouseEvent) => onClick?.(ribbon, event)\n        }, [isInteractive, ribbon, onClick])\n\n        return (\n            <animated.path\n                data-testid={`ribbon.${ribbon.source.id}.${ribbon.target.id}`}\n                d={computeRibbonPath({\n                    sourceStartAngle: animatedProps.sourceStartAngle,\n                    sourceEndAngle: animatedProps.sourceEndAngle,\n                    targetStartAngle: animatedProps.targetStartAngle,\n                    targetEndAngle: animatedProps.targetEndAngle,\n                    ribbonGenerator,\n                })}\n                fill={animatedProps.color}\n                opacity={animatedProps.opacity}\n                strokeWidth={borderWidth}\n                stroke={animatedProps.borderColor}\n                style={{ mixBlendMode: blendMode }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport {\n    useTheme,\n    // @ts-ignore\n    midAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { ChordRibbon } from './ChordRibbon'\nimport {\n    ChordCommonProps,\n    ChordSvgProps,\n    RibbonDatum,\n    RibbonAnimatedProps,\n    RibbonGenerator,\n    ArcDatum,\n} from './types'\n\n/**\n * Used to get ribbon angles, instead of using source and target arcs,\n * we sort arcs by value to have smooth transitions, otherwise,\n * if source|target arc value becomes greater than the other,\n * the ribbon will be reversed.\n */\nconst getRibbonAngles = ({ source, target }: RibbonDatum, useMiddleAngle: boolean) => {\n    let firstArc: ArcDatum\n    let secondArc: ArcDatum\n    if (source.startAngle < target.startAngle) {\n        firstArc = source\n        secondArc = target\n    } else {\n        firstArc = target\n        secondArc = source\n    }\n\n    if (useMiddleAngle) {\n        const firstMiddleAngle = midAngle(firstArc)\n        const secondMiddleAngle = midAngle(secondArc)\n\n        return {\n            sourceStartAngle: firstMiddleAngle,\n            sourceEndAngle: firstMiddleAngle,\n            targetStartAngle: secondMiddleAngle,\n            targetEndAngle: secondMiddleAngle,\n        }\n    }\n\n    return {\n        sourceStartAngle: firstArc.startAngle,\n        sourceEndAngle: firstArc.endAngle,\n        targetStartAngle: secondArc.startAngle,\n        targetEndAngle: secondArc.endAngle,\n    }\n}\n\ninterface ChordRibbonsProps {\n    ribbons: RibbonDatum[]\n    ribbonGenerator: RibbonGenerator\n    borderWidth: ChordCommonProps['ribbonBorderWidth']\n    borderColor: ChordCommonProps['ribbonBorderColor']\n    getOpacity: (ribbon: RibbonDatum) => number\n    blendMode: NonNullable<ChordSvgProps['ribbonBlendMode']>\n    isInteractive: ChordCommonProps['isInteractive']\n    setCurrent: (ribbon: RibbonDatum | null) => void\n    tooltip: NonNullable<ChordSvgProps['ribbonTooltip']>\n    onMouseEnter: ChordSvgProps['onRibbonMouseEnter']\n    onMouseMove: ChordSvgProps['onRibbonMouseMove']\n    onMouseLeave: ChordSvgProps['onRibbonMouseLeave']\n    onClick: ChordSvgProps['onRibbonClick']\n}\n\nexport const ChordRibbons = memo(\n    ({\n        ribbons,\n        ribbonGenerator,\n        borderWidth,\n        borderColor,\n        getOpacity,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: ChordRibbonsProps) => {\n        const { animate, config: springConfig } = useMotionConfig()\n\n        const theme = useTheme()\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const transition = useTransition<RibbonDatum, RibbonAnimatedProps>(ribbons, {\n            keys: ribbon => ribbon.id,\n            initial: ribbon => ({\n                ...getRibbonAngles(ribbon, false),\n                color: ribbon.source.color,\n                opacity: getOpacity(ribbon),\n                borderColor: getBorderColor(ribbon.source),\n            }),\n            from: ribbon => ({\n                ...getRibbonAngles(ribbon, false),\n                color: ribbon.source.color,\n                opacity: 0,\n                borderColor: getBorderColor(ribbon.source),\n            }),\n            update: ribbon => ({\n                ...getRibbonAngles(ribbon, false),\n                color: ribbon.source.color,\n                opacity: getOpacity(ribbon),\n                borderColor: getBorderColor(ribbon.source),\n            }),\n            leave: ribbon => ({\n                ...getRibbonAngles(ribbon, false),\n                color: ribbon.source.color,\n                opacity: 0,\n                borderColor: getBorderColor(ribbon.source),\n            }),\n            expires: true,\n            config: springConfig,\n            immediate: !animate,\n        })\n\n        return (\n            <>\n                {transition((animatedProps, ribbon) => (\n                    <ChordRibbon\n                        key={ribbon.id}\n                        ribbon={ribbon}\n                        ribbonGenerator={ribbonGenerator}\n                        animatedProps={animatedProps}\n                        borderWidth={borderWidth}\n                        blendMode={blendMode}\n                        setCurrent={setCurrent}\n                        isInteractive={isInteractive}\n                        tooltip={tooltip}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                    />\n                ))}\n            </>\n        )\n    }\n)\n","import { createElement, memo, useMemo, MouseEvent } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ArcAnimatedProps, ArcDatum, ArcGenerator, ChordCommonProps } from './types'\nimport { computeArcPath } from './compute'\n\ninterface ChordArcProps {\n    arc: ArcDatum\n    animatedProps: SpringValues<ArcAnimatedProps>\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    setCurrent: (arc: ArcDatum | null) => void\n    isInteractive: ChordCommonProps['isInteractive']\n    onMouseEnter?: ChordCommonProps['onArcMouseEnter']\n    onMouseMove?: ChordCommonProps['onArcMouseMove']\n    onMouseLeave?: ChordCommonProps['onArcMouseLeave']\n    onClick?: ChordCommonProps['onArcClick']\n    tooltip: ChordCommonProps['arcTooltip']\n}\n\nexport const ChordArc = memo(\n    ({\n        arc,\n        animatedProps,\n        borderWidth,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: ChordArcProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n\n            return (event: MouseEvent) => {\n                setCurrent(arc)\n                showTooltipFromEvent(createElement(tooltip, { arc }), event)\n                onMouseEnter?.(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseEnter, setCurrent])\n\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n\n            return (event: MouseEvent) => {\n                showTooltipFromEvent(createElement(tooltip, { arc }), event)\n                onMouseMove?.(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseMove])\n\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n\n            return (event: MouseEvent) => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave?.(arc, event)\n            }\n        }, [isInteractive, hideTooltip, arc, onMouseLeave, setCurrent])\n\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n\n            return (event: MouseEvent) => onClick?.(arc, event)\n        }, [isInteractive, arc, onClick])\n\n        return (\n            <animated.path\n                data-testid={`arc.${arc.id}`}\n                d={computeArcPath({\n                    startAngle: animatedProps.startAngle,\n                    endAngle: animatedProps.endAngle,\n                    arcGenerator,\n                })}\n                fill={animatedProps.color}\n                opacity={animatedProps.opacity}\n                strokeWidth={borderWidth}\n                stroke={animatedProps.borderColor}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { ChordArc } from './ChordArc'\nimport { ArcDatum, ArcGenerator, ChordCommonProps, ArcAnimatedProps } from './types'\n\ninterface ChordArcsProps {\n    arcs: ArcDatum[]\n    arcGenerator: ArcGenerator\n    borderWidth: ChordCommonProps['arcBorderWidth']\n    borderColor: ChordCommonProps['arcBorderColor']\n    getOpacity: (arc: ArcDatum) => number\n    setCurrent: (arc: ArcDatum | null) => void\n    isInteractive: ChordCommonProps['isInteractive']\n    onMouseEnter?: ChordCommonProps['onArcMouseEnter']\n    onMouseMove?: ChordCommonProps['onArcMouseMove']\n    onMouseLeave?: ChordCommonProps['onArcMouseLeave']\n    onClick?: ChordCommonProps['onArcClick']\n    tooltip: ChordCommonProps['arcTooltip']\n}\n\nexport const ChordArcs = memo(\n    ({\n        arcs,\n        borderWidth,\n        borderColor,\n        getOpacity,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: ChordArcsProps) => {\n        const { animate, config: springConfig } = useMotionConfig()\n\n        const theme = useTheme()\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const transition = useTransition<ArcDatum, ArcAnimatedProps>(arcs, {\n            keys: arc => arc.id,\n            initial: arc => ({\n                startAngle: arc.startAngle,\n                endAngle: arc.endAngle,\n                color: arc.color,\n                opacity: getOpacity(arc),\n                borderColor: getBorderColor(arc),\n            }),\n            from: arc => ({\n                startAngle: arc.startAngle,\n                endAngle: arc.endAngle,\n                color: arc.color,\n                opacity: 0,\n                borderColor: getBorderColor(arc),\n            }),\n            update: arc => ({\n                startAngle: arc.startAngle,\n                endAngle: arc.endAngle,\n                color: arc.color,\n                opacity: getOpacity(arc),\n                borderColor: getBorderColor(arc),\n            }),\n            leave: arc => ({\n                startAngle: arc.startAngle,\n                endAngle: arc.endAngle,\n                color: arc.color,\n                opacity: 0,\n                borderColor: getBorderColor(arc),\n            }),\n            expires: true,\n            config: springConfig,\n            immediate: !animate,\n        })\n\n        return (\n            <>\n                {transition((animatedProps, arc) => (\n                    <ChordArc\n                        key={arc.id}\n                        arc={arc}\n                        arcGenerator={arcGenerator}\n                        animatedProps={animatedProps}\n                        borderWidth={borderWidth}\n                        setCurrent={setCurrent}\n                        isInteractive={isInteractive}\n                        tooltip={tooltip}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                    />\n                ))}\n            </>\n        )\n    }\n)\n","import { memo, useMemo } from 'react'\nimport { useTransition, animated, to } from '@react-spring/web'\nimport {\n    // @ts-ignore\n    midAngle,\n    // @ts-ignore\n    getPolarLabelProps,\n    useTheme,\n} from '@nivo/core'\nimport { useMotionConfig } from '@nivo/core'\nimport { ArcDatum, ChordCommonProps } from './types'\nimport { useInheritedColor } from '@nivo/colors'\n\ninterface ChordLabelsProps {\n    arcs: ArcDatum[]\n    radius: number\n    rotation: number\n    color: ChordCommonProps['labelTextColor']\n}\n\nexport const ChordLabels = memo(({ arcs, radius, rotation, color }: ChordLabelsProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    const labels = useMemo(\n        () =>\n            arcs.map(arc => {\n                const angle = midAngle(arc)\n                const textProps = getPolarLabelProps(radius, angle, rotation)\n\n                return {\n                    id: arc.id,\n                    label: arc.label,\n                    x: textProps.x,\n                    y: textProps.y,\n                    rotation: textProps.rotate,\n                    color: getColor(arc),\n                    textAnchor: textProps.align,\n                    dominantBaseline: textProps.baseline,\n                }\n            }),\n        [arcs, radius, rotation, getColor]\n    )\n\n    const transition = useTransition<\n        (typeof labels)[number],\n        {\n            x: number\n            y: number\n            rotation: number\n            color: string\n        }\n    >(labels, {\n        keys: label => label.id,\n        initial: label => {\n            return {\n                x: label.x,\n                y: label.y,\n                rotation: label.rotation,\n                color: label.color,\n            }\n        },\n        from: label => {\n            return {\n                x: label.x,\n                y: label.y,\n                rotation: label.rotation,\n                color: label.color,\n            }\n        },\n        enter: label => {\n            return {\n                x: label.x,\n                y: label.y,\n                rotation: label.rotation,\n                color: label.color,\n            }\n        },\n        update: label => {\n            return {\n                x: label.x,\n                y: label.y,\n                rotation: label.rotation,\n                color: label.color,\n            }\n        },\n        expires: true,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((transitionProps, label) => (\n                <animated.text\n                    key={label.id}\n                    data-testid={`label.${label.id}`}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: transitionProps.color,\n                    }}\n                    transform={to(\n                        [transitionProps.x, transitionProps.y, transitionProps.rotation],\n                        (x, y, rotation) => `translate(${x}, ${y}) rotate(${rotation})`\n                    )}\n                    textAnchor={label.textAnchor}\n                    dominantBaseline={label.dominantBaseline}\n                >\n                    {label.label}\n                </animated.text>\n            ))}\n        </>\n    )\n})\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { svgDefaultProps } from './defaults'\nimport { useChord, useChordSelection, useCustomLayerProps } from './hooks'\nimport { ChordRibbons } from './ChordRibbons'\nimport { ChordArcs } from './ChordArcs'\nimport { ChordLabels } from './ChordLabels'\nimport { ChordSvgProps, LayerId } from './types'\n\ntype InnerChordProps = Omit<ChordSvgProps, 'animate' | 'motionConfig' | 'renderWrapper' | 'theme'>\n\nconst InnerChord = ({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    innerRadiusRatio = svgDefaultProps.innerRadiusRatio,\n    innerRadiusOffset = svgDefaultProps.innerRadiusOffset,\n    padAngle = svgDefaultProps.padAngle,\n\n    layers = svgDefaultProps.layers,\n\n    colors = svgDefaultProps.colors,\n\n    arcBorderWidth = svgDefaultProps.arcBorderWidth,\n    arcBorderColor = svgDefaultProps.arcBorderColor,\n    arcOpacity = svgDefaultProps.arcOpacity,\n    activeArcOpacity = svgDefaultProps.activeArcOpacity,\n    inactiveArcOpacity = svgDefaultProps.inactiveArcOpacity,\n    arcTooltip = svgDefaultProps.arcTooltip,\n\n    ribbonBorderWidth = svgDefaultProps.ribbonBorderWidth,\n    ribbonBorderColor = svgDefaultProps.ribbonBorderColor,\n    ribbonBlendMode = svgDefaultProps.ribbonBlendMode,\n    ribbonOpacity = svgDefaultProps.ribbonOpacity,\n    activeRibbonOpacity = svgDefaultProps.activeRibbonOpacity,\n    inactiveRibbonOpacity = svgDefaultProps.inactiveRibbonOpacity,\n    ribbonTooltip = svgDefaultProps.ribbonTooltip,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    labelOffset = svgDefaultProps.labelOffset,\n    labelRotation = svgDefaultProps.labelRotation,\n    labelTextColor = svgDefaultProps.labelTextColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    onArcMouseEnter,\n    onArcMouseMove,\n    onArcMouseLeave,\n    onArcClick,\n    onRibbonMouseEnter,\n    onRibbonMouseMove,\n    onRibbonMouseLeave,\n    onRibbonClick,\n\n    legends = svgDefaultProps.legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerChordProps) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { center, radius, arcGenerator, ribbonGenerator, arcs, ribbons } = useChord({\n        data,\n        keys,\n        label,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        colors,\n    })\n\n    const { setCurrentArc, setCurrentRibbon, getArcOpacity, getRibbonOpacity } = useChordSelection({\n        arcOpacity,\n        activeArcOpacity,\n        inactiveArcOpacity,\n        ribbons,\n        ribbonOpacity,\n        activeRibbonOpacity,\n        inactiveRibbonOpacity,\n    })\n\n    const customLayerProps = useCustomLayerProps({\n        center,\n        radius,\n        arcs,\n        arcGenerator,\n        ribbons,\n        ribbonGenerator,\n    })\n\n    if (radius <= 0) return null\n\n    const legendData = arcs.map(arc => ({\n        id: arc.id,\n        label: arc.label,\n        color: arc.color,\n    }))\n\n    const layerById: Record<LayerId, ReactNode> = {\n        ribbons: null,\n        arcs: null,\n        labels: null,\n        legends: null,\n    }\n\n    if (layers.includes('ribbons')) {\n        layerById.ribbons = (\n            <g key=\"ribbons\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordRibbons\n                    ribbons={ribbons}\n                    ribbonGenerator={ribbonGenerator}\n                    borderWidth={ribbonBorderWidth}\n                    borderColor={ribbonBorderColor}\n                    getOpacity={getRibbonOpacity}\n                    blendMode={ribbonBlendMode}\n                    setCurrent={setCurrentRibbon}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onRibbonMouseEnter}\n                    onMouseMove={onRibbonMouseMove}\n                    onMouseLeave={onRibbonMouseLeave}\n                    onClick={onRibbonClick}\n                    tooltip={ribbonTooltip}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <g key=\"arcs\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordArcs\n                    arcs={arcs}\n                    arcGenerator={arcGenerator}\n                    borderWidth={arcBorderWidth}\n                    borderColor={arcBorderColor}\n                    getOpacity={getArcOpacity}\n                    setCurrent={setCurrentArc}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onArcMouseEnter}\n                    onMouseMove={onArcMouseMove}\n                    onMouseLeave={onArcMouseLeave}\n                    onClick={onArcClick}\n                    tooltip={arcTooltip}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('labels') && enableLabel) {\n        layerById.labels = (\n            <g key=\"labels\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordLabels\n                    arcs={arcs}\n                    radius={radius + labelOffset}\n                    rotation={labelRotation}\n                    color={labelTextColor}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('legends') && legends.length > 0) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Chord = ({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: ChordSvgProps) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerChord isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { createElement, useRef, useEffect, useCallback, MouseEvent } from 'react'\nimport {\n    useDimensions,\n    useTheme,\n    // @ts-ignore\n    midAngle,\n    // @ts-ignore\n    getPolarLabelProps,\n    degreesToRadians,\n    getRelativeCursor,\n    Margin,\n    Container,\n} from '@nivo/core'\nimport { findArcUnderCursor } from '@nivo/arcs'\nimport { useInheritedColor } from '@nivo/colors'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useChord, useChordSelection, useCustomLayerProps } from './hooks'\nimport { ArcDatum, ChordCanvasProps } from './types'\nimport { canvasDefaultProps } from './defaults'\n\nconst getArcFromMouseEvent = ({\n    event,\n    canvasEl,\n    center,\n    margin,\n    radius,\n    innerRadius,\n    arcs,\n}: {\n    event: MouseEvent\n    canvasEl: HTMLCanvasElement\n    center: [number, number]\n    margin: Margin\n    radius: number\n    innerRadius: number\n    arcs: ArcDatum[]\n}) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    const centerX = margin.left + center[0]\n    const centerY = margin.top + center[1]\n\n    return findArcUnderCursor(centerX, centerY, radius, innerRadius, arcs as any[], x, y)\n}\n\ntype InnerChordCanvasProps = Omit<ChordCanvasProps, 'renderWrapper' | 'theme'>\n\nconst InnerChordCanvas = ({\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    margin: partialMargin,\n    data,\n    keys,\n    width,\n    height,\n    label = canvasDefaultProps.label,\n    valueFormat,\n    innerRadiusRatio = canvasDefaultProps.innerRadiusRatio,\n    innerRadiusOffset = canvasDefaultProps.innerRadiusOffset,\n    padAngle = canvasDefaultProps.padAngle,\n    layers = canvasDefaultProps.layers,\n    colors = canvasDefaultProps.colors,\n    arcBorderWidth = canvasDefaultProps.arcBorderWidth,\n    arcBorderColor = canvasDefaultProps.arcBorderColor,\n    arcOpacity = canvasDefaultProps.arcOpacity,\n    activeArcOpacity = canvasDefaultProps.activeArcOpacity,\n    inactiveArcOpacity = canvasDefaultProps.inactiveArcOpacity,\n    arcTooltip = canvasDefaultProps.arcTooltip,\n    ribbonBorderWidth = canvasDefaultProps.ribbonBorderWidth,\n    ribbonBorderColor = canvasDefaultProps.ribbonBorderColor,\n    ribbonOpacity = canvasDefaultProps.ribbonOpacity,\n    activeRibbonOpacity = canvasDefaultProps.activeRibbonOpacity,\n    inactiveRibbonOpacity = canvasDefaultProps.inactiveRibbonOpacity,\n    enableLabel = canvasDefaultProps.enableLabel,\n    labelOffset = canvasDefaultProps.labelOffset,\n    labelRotation = canvasDefaultProps.labelRotation,\n    labelTextColor = canvasDefaultProps.labelTextColor,\n    isInteractive = canvasDefaultProps.isInteractive,\n    onArcMouseEnter,\n    onArcMouseMove,\n    onArcMouseLeave,\n    onArcClick,\n    legends = canvasDefaultProps.legends,\n}: InnerChordCanvasProps) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { center, radius, innerRadius, arcGenerator, ribbonGenerator, arcs, ribbons } = useChord({\n        data,\n        keys,\n        label,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        colors,\n    })\n\n    const { currentArc, setCurrentArc, getArcOpacity, getRibbonOpacity } = useChordSelection({\n        arcOpacity,\n        activeArcOpacity,\n        inactiveArcOpacity,\n        ribbons,\n        ribbonOpacity,\n        activeRibbonOpacity,\n        inactiveRibbonOpacity,\n    })\n\n    const theme = useTheme()\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getArcBorderColor = useInheritedColor(arcBorderColor, theme)\n    const getRibbonBorderColor = useInheritedColor(ribbonBorderColor, theme)\n\n    const layerContext = useCustomLayerProps({\n        center,\n        radius,\n        arcs,\n        arcGenerator,\n        ribbons,\n        ribbonGenerator,\n    })\n\n    useEffect(() => {\n        if (canvasEl.current === null) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        if (radius <= 0) return\n\n        layers.forEach(layer => {\n            if (layer === 'ribbons') {\n                ctx.save()\n                ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                ribbonGenerator.context(ctx)\n                ribbons.forEach(ribbon => {\n                    ctx.save()\n\n                    ctx.globalAlpha = getRibbonOpacity(ribbon)\n                    ctx.fillStyle = ribbon.source.color\n                    ctx.beginPath()\n                    ribbonGenerator(ribbon)\n                    ctx.fill()\n\n                    if (ribbonBorderWidth > 0) {\n                        ctx.strokeStyle = getRibbonBorderColor(ribbon.source)\n                        ctx.lineWidth = ribbonBorderWidth\n                        ctx.stroke()\n                    }\n\n                    ctx.restore()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'arcs') {\n                ctx.save()\n                ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                arcGenerator.context(ctx)\n                arcs.forEach(arc => {\n                    ctx.save()\n\n                    ctx.globalAlpha = getArcOpacity(arc)\n                    ctx.fillStyle = arc.color\n                    ctx.beginPath()\n                    arcGenerator(arc)\n                    ctx.fill()\n\n                    if (arcBorderWidth > 0) {\n                        ctx.strokeStyle = getArcBorderColor(arc)\n                        ctx.lineWidth = arcBorderWidth\n                        ctx.stroke()\n                    }\n\n                    ctx.restore()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'labels' && enableLabel === true) {\n                ctx.save()\n                ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                ctx.font = `${theme.labels.text.fontSize}px ${\n                    theme.labels.text.fontFamily || 'sans-serif'\n                }`\n\n                arcs.forEach(arc => {\n                    const angle = midAngle(arc)\n                    const props = getPolarLabelProps(radius + labelOffset, angle, labelRotation)\n\n                    ctx.save()\n                    ctx.translate(props.x, props.y)\n                    ctx.rotate(degreesToRadians(props.rotate))\n\n                    ctx.textAlign = props.align\n                    ctx.textBaseline = props.baseline\n                    ctx.fillStyle = getLabelTextColor(arc)\n                    ctx.fillText(arc.label, 0, 0)\n\n                    ctx.restore()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'legends') {\n                ctx.save()\n                ctx.translate(margin.left, margin.top)\n\n                const legendData = arcs.map(arc => ({\n                    id: arc.id,\n                    label: arc.label,\n                    color: arc.color,\n                }))\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n\n                ctx.restore()\n            }\n\n            if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        center,\n        radius,\n        theme,\n        layers,\n        arcs,\n        arcGenerator,\n        getArcOpacity,\n        arcBorderWidth,\n        getArcBorderColor,\n        ribbons,\n        ribbonGenerator,\n        getRibbonOpacity,\n        ribbonBorderWidth,\n        getRibbonBorderColor,\n        enableLabel,\n        labelOffset,\n        labelRotation,\n        getLabelTextColor,\n        legends,\n        layerContext,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (canvasEl.current === null) return\n\n            const arc = getArcFromMouseEvent({\n                event,\n                canvasEl: canvasEl.current,\n                center,\n                margin,\n                radius,\n                innerRadius,\n                arcs,\n            })\n\n            if (arc) {\n                setCurrentArc(arc)\n                showTooltipFromEvent(createElement(arcTooltip, { arc }), event)\n                !currentArc && onArcMouseEnter && onArcMouseEnter(arc, event)\n                onArcMouseMove && onArcMouseMove(arc, event)\n                currentArc &&\n                    currentArc.id !== arc.id &&\n                    onArcMouseLeave &&\n                    onArcMouseLeave(arc, event)\n            } else {\n                setCurrentArc(null)\n                hideTooltip()\n                currentArc && onArcMouseLeave && onArcMouseLeave(currentArc, event)\n            }\n        },\n        [\n            canvasEl,\n            center,\n            margin,\n            radius,\n            innerRadius,\n            arcs,\n            setCurrentArc,\n            currentArc,\n            showTooltipFromEvent,\n            hideTooltip,\n            arcTooltip,\n            onArcMouseEnter,\n            onArcMouseMove,\n            onArcMouseLeave,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrentArc(null)\n        hideTooltip()\n    }, [setCurrentArc, hideTooltip])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (canvasEl.current === null || !onArcClick) return\n\n            const arc = getArcFromMouseEvent({\n                event,\n                canvasEl: canvasEl.current,\n                center,\n                margin,\n                radius,\n                innerRadius,\n                arcs,\n            })\n\n            arc && onArcClick(arc, event)\n        },\n        [canvasEl, center, margin, radius, innerRadius, arcs, onArcClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const ChordCanvas = ({\n    theme,\n    isInteractive = canvasDefaultProps.isInteractive,\n    animate = canvasDefaultProps.animate,\n    motionConfig = canvasDefaultProps.motionConfig,\n    renderWrapper,\n    ...otherProps\n}: ChordCanvasProps) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme, renderWrapper }}>\n        <InnerChordCanvas isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Chord } from './Chord'\nimport { ChordSvgProps } from './types'\n\nexport const ResponsiveChord = (props: Omit<ChordSvgProps, 'width' | 'height'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Chord {...props} width={width} height={height} />}\n    </ResponsiveWrapper>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { ChordCanvas } from './ChordCanvas'\nimport { ChordCanvasProps } from './types'\n\nexport const ResponsiveChordCanvas = (props: Omit<ChordCanvasProps, 'width' | 'height'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChordCanvas {...props} width={width} height={height} />}\n    </ResponsiveWrapper>\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}